@page "/booking/undersøgelse"
@inject IJSRuntime JsRuntime

<div class="container">
    <div class="row mb-4">
        <div class="col-6 mx-auto">
            <h6>Vælg undersøgelse</h6>
            <select class="form-control">
                <option disabled>Vælg undersøgelse</option>
                <option>Blodprøve</option>
                <option>Faderskabstest</option>
                <option>Bloddoner</option>
            </select>
        </div>
    </div>


    <div class="row mb-4">
        <div class="col-6 mx-auto">
            <h6>Vælg sted</h6>
            <select class="form-control">
                <option disabled>Vælg sted</option>
                <option>Aabenraa</option>
                <option>Haderslev</option>
                <option>Gråsten</option>
            </select>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-3 mx-auto">
            <h6>Vælg dato</h6>
                <RadzenDatePicker TValue="DateTime?" DateRender=@DateRender Change=@(args => OnChange(args, "DatePicker with disabled dates", "MM/dd/yyyy")) Class="w-100" />
        
        </div>
        <div class="col-3 mx-auto">
            <h6>Vælg tid</h6>
            <select class="form-control">
                <option disabled>Ledige tider</option>
                <option>d. 14 august kl. 14.00</option>
                <option>d. 14 august kl. 16.00</option>
                <option>d. 17 august kl. 11.00</option>
            </select>
        </div>
    </div>
</div>

@code {
    DateTime? value = DateTime.Now;

    IEnumerable<DateTime> dates = new DateTime[] { DateTime.Today.AddDays(-1), DateTime.Today.AddDays(1) };


    void OnChange(DateTime? value, string name, string format)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
        JsRuntime.InvokeVoidAsync("alert", $"{name} value changed to {value?.ToString(format)}"); // Alert
    }

    void DateRenderSpecial(DateRenderEventArgs args)
    {
        if (dates.Contains(args.Date))
        {
            args.Attributes.Add("style", "background-color: #ff6d41; border-color: white;");
        }
    }

    void DateRender(DateRenderEventArgs args)
    {
        args.Disabled = args.Disabled || dates.Contains(args.Date);
    }

    void DateRenderNoWeekends(DateRenderEventArgs args)
    {
        args.Disabled = args.Disabled || args.Date.DayOfWeek == DayOfWeek.Sunday || args.Date.DayOfWeek == DayOfWeek.Saturday;
    }

    void OnTodayClick()
    {
        value = DateTime.Now;
    }
}

@code {

}
