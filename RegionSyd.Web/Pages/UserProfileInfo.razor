@page "/mine-oplysninger"
@using RegionSyd.Common.DTOs
@using RegionSyd.Web.Models
@using RegionSyd.Web.Services.Interfaces
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IPatientService _PatientService

<div class="container">
    <div class="row">
        <div class="col-6 mx-auto">
            @if (Patient != null)
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">@Helpers.FullNameHelper.GetFullName(Patient.Firstname, Patient.Middlename, Patient.Lastname)</h5>
                        <p>@Helpers.CprHelper.HideLastDigits(Patient.Cpr)</p>
                    </div>
                    <div class="card-body">
                        <input type="text" class="form-control mb-2" @bind="Patient.Address" disabled />
                        <div class="row">
                            <div class="col-6">
                                <input type="number" class="form-control mb-2" @bind="Patient.ZipCode" disabled />
                            </div>
                            <div class="col-6">
                                <input type="text" class="form-control mb-2" @bind="Patient.City" disabled />
                            </div>
                        </div>
                        <input type="tel" class="form-control mb-2" @bind="Patient.Phone" />
                        <input type="email" class="form-control" @bind="Patient.Email" />
                    </div>
                    <div class="card-footer">
                        <input type="button" class="btn btn-green float-end m-1" value="Gem" />
                        <input type="button" class="btn btn-outline-secondary float-end m-1" value="Annuller" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    PatientDTO Patient { get; set; }

    protected async override void OnInitialized()
    {
        var currentUser = await localStorage.GetItemAsync<CurrentUser>("currentUser");
        Patient = await _PatientService.GetById(currentUser.Id);
    }
}
